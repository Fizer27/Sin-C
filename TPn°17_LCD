#include <LiquidCrystal.h> // La librairie pour l'écran
// On initialise avec l'écran avec les pins pour lequel on l'a branché
const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);
void setup() {
 // On définit le nombre de ligne et colonne de l'écran.
 lcd.begin(16, 2);
 // On affiche le message
 lcd.print("Bon_Jour !");
}
void loop() {
 // On met le curseur à la colonne 0 ligne 1
 lcd.setCursor(0, 1);
}





#include <LiquidCrystal.h> // La librairie pour l'écran
// On initialise avec l'écran avec les pins pour lequel on l'a branché
const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
int x = 0 ;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);
byte Coeur [] = {B00000,B01010,B11111,B11111,B01110,B00100,B00000,B00000};
void setup() {
 Serial.begin(9600);
 // On définit le nombre de ligne et colonne de l'écran.
 lcd.begin(16, 2);
 lcd. createChar ( 0, Coeur ) ;
 // On affiche le message
 lcd.print("Bon_Jour !");
 delay(2000);
 lcd.clear();
}
void loop() {
 // On met le curseur à la colonne 0 ligne 1
 lcd.setCursor(0, 1);
 lcd.write(byte(0));
 lcd.setCursor(0, 0); 
 if (Serial.available() > 0) 
  { 
    String input = Serial.readStringUntil('\n');
    lcd.clear(); // Efface l'écran avant d'afficher un nouveau texte
    lcd.setCursor(0, 1); // Place le curseur au début
    lcd.print(input);
  }
}
